<launch>

  <arg name="left_camera_ip" default="192.168.96.129"/>
  <arg name="right_camera_ip" default="192.168.96.127"/>
  <arg name="gui" default="true"/>
  <arg name="depth_threshold" default="1.5"/>
  <arg name="manager" value="vzense_manager"/>

  <node name="dynamic_tf_publisher"
        pkg="dynamic_tf_publisher" type="tf_publish.py"
        output="screen" clear_params="true" >
  </node>

  <!-- <node name="set_left_vzense_camera_initial_tf" -->
  <!--       pkg="dynamic_tf_publisher" type="tf_set.py" -->
  <!--       args="0 0 0 0 0 0 1 world left_vzense_camera_frame 10" -->
  <!--       output="screen" clear_params="true" > -->
  <!-- </node> -->

  <node name="set_right_vzense_camera_initial_tf"
        pkg="dynamic_tf_publisher" type="tf_set.py"
        args="0.40530814161838974 0.00019050782348557088 -0.019496325241734207 0.0008016287317887153 -0.09956586198867276 -0.004412404429784207 0.9950208677233744 left_vzense_camera_frame right_vzense_camera_frame 10"
        output="screen" clear_params="true" >
  </node>

  <group ns="camera" >
    <node name="left_vzense_camera"
          pkg="VzenseROS_MultiCameras" type="vzense_multicameras"
          output="screen" required="true"
          args="left_vzense_camera $(arg left_camera_ip)"
          clear_params="true" >
      <rosparam subst_value="true" >
        RGBResloution: 0
        WorkMode: 1
      </rosparam>
    </node>

    <group ns="left_vzense_camera" >
      <node name="$(arg manager)"
            pkg="nodelet" type="nodelet"
            args="manager"/>

      <node name="depth_image_filter"
            pkg="vzense_demo" type="depth_image_filter.py"
            output="screen" respawn="true">
        <remap from="~input" to="transformedDepth/image_raw" />
        <remap from="~output" to="transformedDepth/filtered/image_raw" />
        <remap from="~output/mask" to="transformedDepth/image_raw/mask" />
        <rosparam subst_value="true" >
          threshold: $(arg depth_threshold)
        </rosparam>
      </node>

      <node pkg="nodelet" type="nodelet" name="pointcloudxyzrgb_manager"
            args="load depth_image_proc/point_cloud_xyzrgb $(arg manager)"
            clear_params="true" >
        <remap from="depth_registered/image_rect" to="transformedDepth/filtered/image_raw"/>
        <remap from="depth_registered/points" to="transformedDepth/points"/>
        <remap from="rgb/image_rect_color" to="color/image_raw"/>
        <remap from="rgb/camera_info" to="color/camera_info"/>
      </node>
    </group>

    <node name="right_vzense_camera"
          pkg="VzenseROS_MultiCameras" type="vzense_multicameras"
          output="screen" required="true"
          args="right_vzense_camera $(arg right_camera_ip)"
          clear_params="true" >
      <rosparam subst_value="true" >
        RGBResloution: 0
        WorkMode: 1
      </rosparam>
    </node>

    <group ns="right_vzense_camera" >
      <node name="$(arg manager)"
            pkg="nodelet" type="nodelet"
            args="manager"/>

      <node name="depth_image_filter"
            pkg="vzense_demo" type="depth_image_filter.py"
            output="screen" respawn="true">
        <remap from="~input" to="transformedDepth/image_raw" />
        <remap from="~output" to="transformedDepth/filtered/image_raw" />
        <remap from="~output/mask" to="transformedDepth/image_raw/mask" />
        <rosparam subst_value="true" >
          threshold: $(arg depth_threshold)
        </rosparam>
      </node>

      <node pkg="nodelet" type="nodelet" name="pointcloudxyzrgb_manager"
            args="load depth_image_proc/point_cloud_xyzrgb $(arg manager)"
            clear_params="true" >
        <remap from="depth_registered/image_rect" to="transformedDepth/filtered/image_raw"/>
        <remap from="depth_registered/points" to="transformedDepth/points"/>
        <remap from="rgb/image_rect_color" to="color/image_raw"/>
        <remap from="rgb/camera_info" to="color/camera_info"/>
      </node>
    </group>

  </group>


  <group if="$(arg gui)" >
    <node name="$(anon rviz)"
          pkg="rviz" type="rviz"
          args="-d $(find vzense_demo)/launch/config/config.rviz" >
    </node>
  </group>

</launch>
